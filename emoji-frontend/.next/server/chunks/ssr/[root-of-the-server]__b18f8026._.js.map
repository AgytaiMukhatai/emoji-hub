{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/agytaimukhatai/Desktop/emoji_hub/emoji-frontend/src/components/EmojiList.tsx"],"sourcesContent":["\"use client\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\n\ninterface Emoji {\n  name: string;\n  category: string;\n  htmlCode: string[];\n  unicode: string[];\n}\n\ninterface EmojiResponse {\n  items: Emoji[];\n  total: number;\n  page: number;\n  page_size: number;\n  total_pages: number;\n  categories: string[];\n}\n\nconst fetchEmojis = async (): Promise<EmojiResponse> => {\n  const { data } = await axios.get<EmojiResponse>(\n    \"http://localhost:8000/emoji?page=1&page_size=20\"\n  );\n  return data;\n};\n\nexport default function EmojiList() {\n  const { data, isLoading, isError } = useQuery({\n    queryKey: [\"emojis\"],\n    queryFn: fetchEmojis,\n  });\n\n  if (isLoading) return <p>Loading...</p>;\n  if (isError) return <p>Error loading emojis</p>;\n\n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-4\">Emoji Catalog</h1>\n      <ul className=\"grid grid-cols-5 gap-4\">\n        {data?.items.map((emoji) => (\n          <li key={emoji.unicode[0]} className=\"p-2 border rounded text-center\">\n            <div\n              className=\"text-3xl\"\n              dangerouslySetInnerHTML={{ __html: emoji.htmlCode[0] }}\n            />\n            <p className=\"text-sm\">{emoji.name}</p>\n            <p className=\"text-xs text-gray-500\">{emoji.category}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAqBA,MAAM,cAAc;IAClB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,gJAAK,CAAC,GAAG,CAC9B;IAEF,OAAO;AACT;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAA,uLAAQ,EAAC;QAC5C,UAAU;YAAC;SAAS;QACpB,SAAS;IACX;IAEA,IAAI,WAAW,qBAAO,8OAAC;kBAAE;;;;;;IACzB,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IAEvB,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAG,WAAU;0BACX,MAAM,MAAM,IAAI,CAAC,sBAChB,8OAAC;wBAA0B,WAAU;;0CACnC,8OAAC;gCACC,WAAU;gCACV,yBAAyB;oCAAE,QAAQ,MAAM,QAAQ,CAAC,EAAE;gCAAC;;;;;;0CAEvD,8OAAC;gCAAE,WAAU;0CAAW,MAAM,IAAI;;;;;;0CAClC,8OAAC;gCAAE,WAAU;0CAAyB,MAAM,QAAQ;;;;;;;uBAN7C,MAAM,OAAO,CAAC,EAAE;;;;;;;;;;;;;;;;AAYnC","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/agytaimukhatai/Desktop/emoji_hub/emoji-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport EmojiList from \"../components/EmojiList\";\n\nconst queryClient = new QueryClient();\n\nexport default function Page() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <main className=\"p-6\">\n        <EmojiList />\n      </main>\n    </QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAHA;;;;AAKA,MAAM,cAAc,IAAI,4LAAW;AAEpB,SAAS;IACtB,qBACE,8OAAC,6MAAmB;QAAC,QAAQ;kBAC3B,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC,0IAAS;;;;;;;;;;;;;;;AAIlB","debugId":null}}]
}