{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/agytaimukhatai/Desktop/emoji_hub/emoji-frontend/src/components/EmojiList.tsx"],"sourcesContent":["\"use client\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState, useEffect } from \"react\";\n\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debounced, setDebounced] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n  return debounced;\n}\n\ntype Emoji = {\n  name: string;\n  category: string;\n  htmlCode: string[];\n};\n\nexport default function EmojiList() {\n  const [search, setSearch] = useState(\"\");\n  const debouncedSearch = useDebounce(search, 1000);\n  const [category, setCategory] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const { data, isLoading, error } = useQuery({\n    queryKey: [\"emojis\", debouncedSearch, category, page],\n    queryFn: async () => {\n      const params = new URLSearchParams({\n        page: page.toString(),\n        page_size: \"20\",\n      });\n\n      if (debouncedSearch) params.append(\"search\", debouncedSearch);\n      if (category) params.append(\"category\", category);\n\n      const res = await fetch(`http://127.0.0.1:8000/emoji?${params.toString()}`);\n      if (!res.ok) throw new Error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏\");\n      return res.json();\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"emoji-grid\">\n        {Array.from({ length: 8 }).map((_, i) => (\n          <div key={i} className=\"skeleton-card\"></div>\n        ))}\n      </div>\n    );\n  }\n  if (error) return <p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–º–æ–¥–∑–∏</p>;\n\n  return (\n    <div className=\"emoji-container\">\n      {/* üîç –ü–æ–∏—Å–∫ */}\n      <input\n        type=\"text\"\n        placeholder=\"–ü–æ–∏—Å–∫ —ç–º–æ–¥–∑–∏...\"\n        className=\"search-input\"\n        value={search}\n        onChange={(e) => {\n          setSearch(e.target.value);\n          setPage(1);\n        }}\n      />\n\n      {/* üóÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}\n      <div className=\"categories\">\n        <button\n          className={`btn ${category === \"\" ? \"btn-red\" : \"btn-outline\"}`}\n          onClick={() => {\n            setCategory(\"\");\n            setPage(1);\n          }}\n        >\n          –í—Å–µ\n        </button>\n        {data.categories?.map((c: string) => (\n          <button\n            key={c}\n            className={`btn ${category === c ? \"btn-red\" : \"btn-outline\"}`}\n            onClick={() => {\n              setCategory(c);\n              setPage(1);\n            }}\n          >\n            {c}\n          </button>\n        ))}\n      </div>\n\n      {/* üòÄ –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ */}\n      <div className=\"emoji-grid\">\n        {data.items.map((emoji: Emoji, i: number) => (\n          <div key={i} className=\"emoji-card\">\n            <span className=\"text-3xl mb-2\">\n                {String.fromCodePoint(parseInt(emoji.htmlCode[0].replace(\"&#\", \"\").replace(\";\", \"\"), 10))}\n            </span>\n            <p className=\"emoji-name\">{emoji.name}</p>\n            <p className=\"emoji-category\">{emoji.category}</p>\n          </div>\n        ))}\n      </div>\n\n      {/* üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}\n      <div className=\"pagination\">\n        <button\n          className=\"btn btn-outline\"\n          disabled={page <= 1}\n          onClick={() => setPage((p) => p - 1)}\n        >\n          ‚¨Ö –ù–∞–∑–∞–¥\n        </button>\n        <span>\n          –°—Ç—Ä–∞–Ω–∏—Ü–∞ {data.page} –∏–∑ {data.total_pages}\n        </span>\n        <button\n          className=\"btn btn-outline\"\n          disabled={page >= data.total_pages}\n          onClick={() => setPage((p) => p + 1)}\n        >\n          –í–ø–µ—Ä—ë–¥ ‚û°\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKA,SAAS,YAAe,KAAQ,EAAE,KAAa;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,IAAA,kNAAS,EAAC;QACR,MAAM,UAAU,WAAW,IAAM,aAAa,QAAQ;QACtD,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAO;KAAM;IACjB,OAAO;AACT;AAQe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IACrC,MAAM,kBAAkB,YAAY,QAAQ;IAC5C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAC;IAEjC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,IAAA,uLAAQ,EAAC;QAC1C,UAAU;YAAC;YAAU;YAAiB;YAAU;SAAK;QACrD,SAAS;YACP,MAAM,SAAS,IAAI,gBAAgB;gBACjC,MAAM,KAAK,QAAQ;gBACnB,WAAW;YACb;YAEA,IAAI,iBAAiB,OAAO,MAAM,CAAC,UAAU;YAC7C,IAAI,UAAU,OAAO,MAAM,CAAC,YAAY;YAExC,MAAM,MAAM,MAAM,MAAM,CAAC,4BAA4B,EAAE,OAAO,QAAQ,IAAI;YAC1E,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;YAC7B,OAAO,IAAI,IAAI;QACjB;IACF;IAEA,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACZ,MAAM,IAAI,CAAC;gBAAE,QAAQ;YAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;oBAAY,WAAU;mBAAb;;;;;;;;;;IAIlB;IACA,IAAI,OAAO,qBAAO,8OAAC;kBAAE;;;;;;IAErB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,WAAU;gBACV,OAAO;gBACP,UAAU,CAAC;oBACT,UAAU,EAAE,MAAM,CAAC,KAAK;oBACxB,QAAQ;gBACV;;;;;;0BAIF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAW,CAAC,IAAI,EAAE,aAAa,KAAK,YAAY,eAAe;wBAC/D,SAAS;4BACP,YAAY;4BACZ,QAAQ;wBACV;kCACD;;;;;;oBAGA,KAAK,UAAU,EAAE,IAAI,CAAC,kBACrB,8OAAC;4BAEC,WAAW,CAAC,IAAI,EAAE,aAAa,IAAI,YAAY,eAAe;4BAC9D,SAAS;gCACP,YAAY;gCACZ,QAAQ;4BACV;sCAEC;2BAPI;;;;;;;;;;;0BAaX,8OAAC;gBAAI,WAAU;0BACZ,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,OAAc,kBAC7B,8OAAC;wBAAY,WAAU;;0CACrB,8OAAC;gCAAK,WAAU;0CACX,OAAO,aAAa,CAAC,SAAS,MAAM,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,KAAK;;;;;;0CAEzF,8OAAC;gCAAE,WAAU;0CAAc,MAAM,IAAI;;;;;;0CACrC,8OAAC;gCAAE,WAAU;0CAAkB,MAAM,QAAQ;;;;;;;uBALrC;;;;;;;;;;0BAWd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAU;wBACV,UAAU,QAAQ;wBAClB,SAAS,IAAM,QAAQ,CAAC,IAAM,IAAI;kCACnC;;;;;;kCAGD,8OAAC;;4BAAK;4BACM,KAAK,IAAI;4BAAC;4BAAK,KAAK,WAAW;;;;;;;kCAE3C,8OAAC;wBACC,WAAU;wBACV,UAAU,QAAQ,KAAK,WAAW;wBAClC,SAAS,IAAM,QAAQ,CAAC,IAAM,IAAI;kCACnC;;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/agytaimukhatai/Desktop/emoji_hub/emoji-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport EmojiList from \"../components/EmojiList\";\n\nconst queryClient = new QueryClient();\n\nexport default function Page() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <main className=\"p-6\">\n        <EmojiList />\n      </main>\n    </QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAHA;;;;AAKA,MAAM,cAAc,IAAI,4LAAW;AAEpB,SAAS;IACtB,qBACE,8OAAC,6MAAmB;QAAC,QAAQ;kBAC3B,cAAA,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC,0IAAS;;;;;;;;;;;;;;;AAIlB","debugId":null}}]
}